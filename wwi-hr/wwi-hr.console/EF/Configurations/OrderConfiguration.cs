// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using wwi.hr.EF;


namespace wwi.hr.EF.Configurations
{
    public partial class OrderConfiguration : IEntityTypeConfiguration<Order>
    {
        public void Configure(EntityTypeBuilder<Order> entity)
        {
            entity.ToTable("Orders", "Sales");

            entity.HasIndex(e => e.ContactPersonId, "FK_Sales_Orders_ContactPersonID");

            entity.HasIndex(e => e.CustomerId, "FK_Sales_Orders_CustomerID");

            entity.HasIndex(e => e.PickedByPersonId, "FK_Sales_Orders_PickedByPersonID");

            entity.HasIndex(e => e.SalespersonPersonId, "FK_Sales_Orders_SalespersonPersonID");

            entity.Property(e => e.OrderId)
                .HasColumnName("OrderID")
                .HasDefaultValueSql("(NEXT VALUE FOR [Sequences].[OrderID])");

            entity.Property(e => e.BackorderOrderId).HasColumnName("BackorderOrderID");

            entity.Property(e => e.ContactPersonId).HasColumnName("ContactPersonID");

            entity.Property(e => e.CustomerId).HasColumnName("CustomerID");

            entity.Property(e => e.CustomerPurchaseOrderNumber).HasMaxLength(20);

            entity.Property(e => e.ExpectedDeliveryDate).HasColumnType("date");

            entity.Property(e => e.LastEditedWhen).HasDefaultValueSql("(sysdatetime())");

            entity.Property(e => e.OrderDate).HasColumnType("date");

            entity.Property(e => e.PickedByPersonId).HasColumnName("PickedByPersonID");

            entity.Property(e => e.SalespersonPersonId).HasColumnName("SalespersonPersonID");

            entity.HasOne(d => d.BackorderOrder)
                .WithMany(p => p.InverseBackorderOrder)
                .HasForeignKey(d => d.BackorderOrderId)
                .HasConstraintName("FK_Sales_Orders_BackorderOrderID_Sales_Orders");

            entity.HasOne(d => d.ContactPerson)
                .WithMany(p => p.OrderContactPersons)
                .HasForeignKey(d => d.ContactPersonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_Orders_ContactPersonID_Application_People");

            entity.HasOne(d => d.Customer)
                .WithMany(p => p.Orders)
                .HasForeignKey(d => d.CustomerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_Orders_CustomerID_Sales_Customers");

            entity.HasOne(d => d.LastEditedByNavigation)
                .WithMany(p => p.OrderLastEditedByNavigations)
                .HasForeignKey(d => d.LastEditedBy)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_Orders_Application_People");

            entity.HasOne(d => d.PickedByPerson)
                .WithMany(p => p.OrderPickedByPersons)
                .HasForeignKey(d => d.PickedByPersonId)
                .HasConstraintName("FK_Sales_Orders_PickedByPersonID_Application_People");

            entity.HasOne(d => d.SalespersonPerson)
                .WithMany(p => p.OrderSalespersonPersons)
                .HasForeignKey(d => d.SalespersonPersonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_Orders_SalespersonPersonID_Application_People");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Order> entity);
    }
}
