// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using wwi.hr.EF;


namespace wwi.hr.EF.Configurations
{
    public partial class CustomerConfiguration : IEntityTypeConfiguration<Customer>
    {
        public void Configure(EntityTypeBuilder<Customer> entity)
        {
            entity.ToTable("Customers", "Sales");

            entity.HasIndex(e => e.AlternateContactPersonId, "FK_Sales_Customers_AlternateContactPersonID");

            entity.HasIndex(e => e.BuyingGroupId, "FK_Sales_Customers_BuyingGroupID");

            entity.HasIndex(e => e.CustomerCategoryId, "FK_Sales_Customers_CustomerCategoryID");

            entity.HasIndex(e => e.DeliveryCityId, "FK_Sales_Customers_DeliveryCityID");

            entity.HasIndex(e => e.DeliveryMethodId, "FK_Sales_Customers_DeliveryMethodID");

            entity.HasIndex(e => e.PostalCityId, "FK_Sales_Customers_PostalCityID");

            entity.HasIndex(e => e.PrimaryContactPersonId, "FK_Sales_Customers_PrimaryContactPersonID");

            entity.HasIndex(e => new { e.IsOnCreditHold, e.CustomerId, e.BillToCustomerId }, "IX_Sales_Customers_Perf_20160301_06");

            entity.HasIndex(e => e.CustomerName, "UQ_Sales_Customers_CustomerName")
                .IsUnique();

            entity.Property(e => e.CustomerId)
                .HasColumnName("CustomerID")
                .HasDefaultValueSql("(NEXT VALUE FOR [Sequences].[CustomerID])");

            entity.Property(e => e.AccountOpenedDate).HasColumnType("date");

            entity.Property(e => e.AlternateContactPersonId).HasColumnName("AlternateContactPersonID");

            entity.Property(e => e.BillToCustomerId).HasColumnName("BillToCustomerID");

            entity.Property(e => e.BuyingGroupId).HasColumnName("BuyingGroupID");

            entity.Property(e => e.CreditLimit).HasColumnType("decimal(18, 2)");

            entity.Property(e => e.CustomerCategoryId).HasColumnName("CustomerCategoryID");

            entity.Property(e => e.CustomerName)
                .IsRequired()
                .HasMaxLength(100);

            entity.Property(e => e.DeliveryAddressLine1)
                .IsRequired()
                .HasMaxLength(60);

            entity.Property(e => e.DeliveryAddressLine2).HasMaxLength(60);

            entity.Property(e => e.DeliveryCityId).HasColumnName("DeliveryCityID");

            entity.Property(e => e.DeliveryMethodId).HasColumnName("DeliveryMethodID");

            entity.Property(e => e.DeliveryPostalCode)
                .IsRequired()
                .HasMaxLength(10);

            entity.Property(e => e.DeliveryRun).HasMaxLength(5);

            entity.Property(e => e.FaxNumber)
                .IsRequired()
                .HasMaxLength(20);

            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .HasMaxLength(20);

            entity.Property(e => e.PostalAddressLine1)
                .IsRequired()
                .HasMaxLength(60);

            entity.Property(e => e.PostalAddressLine2).HasMaxLength(60);

            entity.Property(e => e.PostalCityId).HasColumnName("PostalCityID");

            entity.Property(e => e.PostalPostalCode)
                .IsRequired()
                .HasMaxLength(10);

            entity.Property(e => e.PrimaryContactPersonId).HasColumnName("PrimaryContactPersonID");

            entity.Property(e => e.RunPosition).HasMaxLength(5);

            entity.Property(e => e.StandardDiscountPercentage).HasColumnType("decimal(18, 3)");

            entity.Property(e => e.WebsiteUrl)
                .IsRequired()
                .HasMaxLength(256)
                .HasColumnName("WebsiteURL");

            entity.HasOne(d => d.AlternateContactPerson)
                .WithMany(p => p.CustomerAlternateContactPersons)
                .HasForeignKey(d => d.AlternateContactPersonId)
                .HasConstraintName("FK_Sales_Customers_AlternateContactPersonID_Application_People");

            entity.HasOne(d => d.BillToCustomer)
                .WithMany(p => p.InverseBillToCustomer)
                .HasForeignKey(d => d.BillToCustomerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_Customers_BillToCustomerID_Sales_Customers");

            entity.HasOne(d => d.BuyingGroup)
                .WithMany(p => p.Customers)
                .HasForeignKey(d => d.BuyingGroupId)
                .HasConstraintName("FK_Sales_Customers_BuyingGroupID_Sales_BuyingGroups");

            entity.HasOne(d => d.CustomerCategory)
                .WithMany(p => p.Customers)
                .HasForeignKey(d => d.CustomerCategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_Customers_CustomerCategoryID_Sales_CustomerCategories");

            entity.HasOne(d => d.DeliveryCity)
                .WithMany(p => p.CustomerDeliveryCities)
                .HasForeignKey(d => d.DeliveryCityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_Customers_DeliveryCityID_Application_Cities");

            entity.HasOne(d => d.DeliveryMethod)
                .WithMany(p => p.Customers)
                .HasForeignKey(d => d.DeliveryMethodId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_Customers_DeliveryMethodID_Application_DeliveryMethods");

            entity.HasOne(d => d.LastEditedByNavigation)
                .WithMany(p => p.CustomerLastEditedByNavigations)
                .HasForeignKey(d => d.LastEditedBy)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_Customers_Application_People");

            entity.HasOne(d => d.PostalCity)
                .WithMany(p => p.CustomerPostalCities)
                .HasForeignKey(d => d.PostalCityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_Customers_PostalCityID_Application_Cities");

            entity.HasOne(d => d.PrimaryContactPerson)
                .WithMany(p => p.CustomerPrimaryContactPersons)
                .HasForeignKey(d => d.PrimaryContactPersonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_Customers_PrimaryContactPersonID_Application_People");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Customer> entity);
    }
}
