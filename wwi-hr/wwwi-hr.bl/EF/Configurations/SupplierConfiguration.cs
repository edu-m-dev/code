// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using wwi.hr.EF;


namespace wwi.hr.EF.Configurations
{
    public partial class SupplierConfiguration : IEntityTypeConfiguration<Supplier>
    {
        public void Configure(EntityTypeBuilder<Supplier> entity)
        {
            entity.ToTable("Suppliers", "Purchasing");

            entity.HasIndex(e => e.AlternateContactPersonId, "FK_Purchasing_Suppliers_AlternateContactPersonID");

            entity.HasIndex(e => e.DeliveryCityId, "FK_Purchasing_Suppliers_DeliveryCityID");

            entity.HasIndex(e => e.DeliveryMethodId, "FK_Purchasing_Suppliers_DeliveryMethodID");

            entity.HasIndex(e => e.PostalCityId, "FK_Purchasing_Suppliers_PostalCityID");

            entity.HasIndex(e => e.PrimaryContactPersonId, "FK_Purchasing_Suppliers_PrimaryContactPersonID");

            entity.HasIndex(e => e.SupplierCategoryId, "FK_Purchasing_Suppliers_SupplierCategoryID");

            entity.HasIndex(e => e.SupplierName, "UQ_Purchasing_Suppliers_SupplierName")
                .IsUnique();

            entity.Property(e => e.SupplierId)
                .HasColumnName("SupplierID")
                .HasDefaultValueSql("(NEXT VALUE FOR [Sequences].[SupplierID])");

            entity.Property(e => e.AlternateContactPersonId).HasColumnName("AlternateContactPersonID");

            entity.Property(e => e.BankAccountBranch).HasMaxLength(50);

            entity.Property(e => e.BankAccountCode).HasMaxLength(20);

            entity.Property(e => e.BankAccountName).HasMaxLength(50);

            entity.Property(e => e.BankAccountNumber).HasMaxLength(20);

            entity.Property(e => e.BankInternationalCode).HasMaxLength(20);

            entity.Property(e => e.DeliveryAddressLine1)
                .IsRequired()
                .HasMaxLength(60);

            entity.Property(e => e.DeliveryAddressLine2).HasMaxLength(60);

            entity.Property(e => e.DeliveryCityId).HasColumnName("DeliveryCityID");

            entity.Property(e => e.DeliveryMethodId).HasColumnName("DeliveryMethodID");

            entity.Property(e => e.DeliveryPostalCode)
                .IsRequired()
                .HasMaxLength(10);

            entity.Property(e => e.FaxNumber)
                .IsRequired()
                .HasMaxLength(20);

            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .HasMaxLength(20);

            entity.Property(e => e.PostalAddressLine1)
                .IsRequired()
                .HasMaxLength(60);

            entity.Property(e => e.PostalAddressLine2).HasMaxLength(60);

            entity.Property(e => e.PostalCityId).HasColumnName("PostalCityID");

            entity.Property(e => e.PostalPostalCode)
                .IsRequired()
                .HasMaxLength(10);

            entity.Property(e => e.PrimaryContactPersonId).HasColumnName("PrimaryContactPersonID");

            entity.Property(e => e.SupplierCategoryId).HasColumnName("SupplierCategoryID");

            entity.Property(e => e.SupplierName)
                .IsRequired()
                .HasMaxLength(100);

            entity.Property(e => e.SupplierReference).HasMaxLength(20);

            entity.Property(e => e.WebsiteUrl)
                .IsRequired()
                .HasMaxLength(256)
                .HasColumnName("WebsiteURL");

            entity.HasOne(d => d.AlternateContactPerson)
                .WithMany(p => p.SupplierAlternateContactPersons)
                .HasForeignKey(d => d.AlternateContactPersonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Purchasing_Suppliers_AlternateContactPersonID_Application_People");

            entity.HasOne(d => d.DeliveryCity)
                .WithMany(p => p.SupplierDeliveryCities)
                .HasForeignKey(d => d.DeliveryCityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Purchasing_Suppliers_DeliveryCityID_Application_Cities");

            entity.HasOne(d => d.DeliveryMethod)
                .WithMany(p => p.Suppliers)
                .HasForeignKey(d => d.DeliveryMethodId)
                .HasConstraintName("FK_Purchasing_Suppliers_DeliveryMethodID_Application_DeliveryMethods");

            entity.HasOne(d => d.LastEditedByNavigation)
                .WithMany(p => p.SupplierLastEditedByNavigations)
                .HasForeignKey(d => d.LastEditedBy)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Purchasing_Suppliers_Application_People");

            entity.HasOne(d => d.PostalCity)
                .WithMany(p => p.SupplierPostalCities)
                .HasForeignKey(d => d.PostalCityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Purchasing_Suppliers_PostalCityID_Application_Cities");

            entity.HasOne(d => d.PrimaryContactPerson)
                .WithMany(p => p.SupplierPrimaryContactPersons)
                .HasForeignKey(d => d.PrimaryContactPersonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Purchasing_Suppliers_PrimaryContactPersonID_Application_People");

            entity.HasOne(d => d.SupplierCategory)
                .WithMany(p => p.Suppliers)
                .HasForeignKey(d => d.SupplierCategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Purchasing_Suppliers_SupplierCategoryID_Purchasing_SupplierCategories");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Supplier> entity);
    }
}
