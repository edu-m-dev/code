// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using wwi.bl.EF;

namespace wwi.bl.EF.Configurations
{
    public partial class PersonConfiguration : IEntityTypeConfiguration<Person>
    {
        public void Configure(EntityTypeBuilder<Person> entity)
        {
            entity.ToTable("People", "Application");

            entity.ToTable(tb => tb.IsTemporal(ttb =>
    {
        ttb.UseHistoryTable("People_Archive", "Application");
        ttb
            .HasPeriodStart("ValidFrom")
            .HasColumnName("ValidFrom");
        ttb
            .HasPeriodEnd("ValidTo")
            .HasColumnName("ValidTo");
    }
));

            entity.HasIndex(e => e.FullName, "IX_Application_People_FullName");

            entity.HasIndex(e => e.IsEmployee, "IX_Application_People_IsEmployee");

            entity.HasIndex(e => e.IsSalesperson, "IX_Application_People_IsSalesperson");

            entity.HasIndex(e => new { e.IsPermittedToLogon, e.PersonId }, "IX_Application_People_Perf_20160301_05");

            entity.Property(e => e.PersonId)
                .HasColumnName("PersonID")
                .HasDefaultValueSql("(NEXT VALUE FOR [Sequences].[PersonID])");

            entity.Property(e => e.EmailAddress).HasMaxLength(256);

            entity.Property(e => e.FaxNumber).HasMaxLength(20);

            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(50);

            entity.Property(e => e.LogonName).HasMaxLength(50);

            entity.Property(e => e.OtherLanguages).HasComputedColumnSql("(json_query([CustomFields],N'$.OtherLanguages'))", false);

            entity.Property(e => e.PhoneNumber).HasMaxLength(20);

            entity.Property(e => e.PreferredName)
                .IsRequired()
                .HasMaxLength(50);

            entity.Property(e => e.SearchName)
                .IsRequired()
                .HasMaxLength(101)
                .HasComputedColumnSql("(concat([PreferredName],N' ',[FullName]))", true);

            entity.HasOne(d => d.LastEditedByNavigation)
                .WithMany(p => p.InverseLastEditedByNavigation)
                .HasForeignKey(d => d.LastEditedBy)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Application_People_Application_People");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Person> entity);
    }
}
