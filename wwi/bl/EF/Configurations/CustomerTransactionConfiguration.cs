// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using wwi.bl.EF;

namespace wwi.bl.EF.Configurations
{
    public partial class CustomerTransactionConfiguration : IEntityTypeConfiguration<CustomerTransaction>
    {
        public void Configure(EntityTypeBuilder<CustomerTransaction> entity)
        {
            entity.HasKey(e => e.CustomerTransactionID)
                .HasName("PK_Sales_CustomerTransactions")
                .IsClustered(false);

            entity.ToTable("CustomerTransactions", "Sales");

            entity.HasIndex(e => e.TransactionDate, "CX_Sales_CustomerTransactions")
                .IsClustered();

            entity.HasIndex(e => new { e.TransactionDate, e.CustomerID }, "FK_Sales_CustomerTransactions_CustomerID");

            entity.HasIndex(e => new { e.TransactionDate, e.InvoiceID }, "FK_Sales_CustomerTransactions_InvoiceID");

            entity.HasIndex(e => new { e.TransactionDate, e.PaymentMethodID }, "FK_Sales_CustomerTransactions_PaymentMethodID");

            entity.HasIndex(e => new { e.TransactionDate, e.TransactionTypeID }, "FK_Sales_CustomerTransactions_TransactionTypeID");

            entity.HasIndex(e => new { e.TransactionDate, e.IsFinalized }, "IX_Sales_CustomerTransactions_IsFinalized");

            entity.Property(e => e.CustomerTransactionID).HasDefaultValueSql("(NEXT VALUE FOR [Sequences].[TransactionID])");

            entity.Property(e => e.AmountExcludingTax).HasColumnType("decimal(18, 2)");

            entity.Property(e => e.FinalizationDate).HasColumnType("date");

            entity.Property(e => e.IsFinalized).HasComputedColumnSql("(case when [FinalizationDate] IS NULL then CONVERT([bit],(0)) else CONVERT([bit],(1)) end)", true);

            entity.Property(e => e.LastEditedWhen).HasDefaultValueSql("(sysdatetime())");

            entity.Property(e => e.OutstandingBalance).HasColumnType("decimal(18, 2)");

            entity.Property(e => e.TaxAmount).HasColumnType("decimal(18, 2)");

            entity.Property(e => e.TransactionAmount).HasColumnType("decimal(18, 2)");

            entity.Property(e => e.TransactionDate).HasColumnType("date");

            entity.HasOne(d => d.Customer)
                .WithMany(p => p.CustomerTransactions)
                .HasForeignKey(d => d.CustomerID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_CustomerTransactions_CustomerID_Sales_Customers");

            entity.HasOne(d => d.Invoice)
                .WithMany(p => p.CustomerTransactions)
                .HasForeignKey(d => d.InvoiceID)
                .HasConstraintName("FK_Sales_CustomerTransactions_InvoiceID_Sales_Invoices");

            entity.HasOne(d => d.LastEditedByNavigation)
                .WithMany(p => p.CustomerTransactions)
                .HasForeignKey(d => d.LastEditedBy)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_CustomerTransactions_Application_People");

            entity.HasOne(d => d.PaymentMethod)
                .WithMany(p => p.CustomerTransactions)
                .HasForeignKey(d => d.PaymentMethodID)
                .HasConstraintName("FK_Sales_CustomerTransactions_PaymentMethodID_Application_PaymentMethods");

            entity.HasOne(d => d.TransactionType)
                .WithMany(p => p.CustomerTransactions)
                .HasForeignKey(d => d.TransactionTypeID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sales_CustomerTransactions_TransactionTypeID_Application_TransactionTypes");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CustomerTransaction> entity);
    }
}
